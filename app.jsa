var VertexShaderText =
[
    'percision mediump float;',
    '',
    'attribute vec2 vectPosition;',
    '',
    'voide main()',
    '{',
    '  gl.Position = vec4(vertPosition, 0.0, 1.0);',
    '}',

].join('\n');
var FragmentShaderText =
[
    'percision mediump float;',
    '',
    'void main()',
    '{',
    '  gl.FlagColor = vec4(1.0, 0.0, 0.0, 1.0);',
    '}'
].join('\n')
var init = function () {
    var canvas = document.getElementById('game_surface');
    var gl = canvas.getContext('webgl');
    gl.clearColor(0.75, 0.85, 0.8, 1.0);
    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
    //
    //Create shaders
    //
    var vertexShader = gl.CreateShader(gl.VERTEX_SHADER);
    var fragmentShader = gl.CreateShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(vertexShader, vertexShaderText);
    gl.shaderSource(fragmentShader, fragmentShaderText);
    gl.compileShader(vertexShader)
    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {
        console.error('why', gl.getShaderInfoLog(vertexShader));
        return;
    }

    gl.compileShader(fragmentShader)
};